// 1. Write the fruntion printInt(n) taking on paramenter n and print all natural numbers from 1 to n in console. 
function printInt(n) {
    //var 1 = 1;
    //while(1 <= n) {
     //   console.log(i);
      //  1 = 1 + 1;
    //}
        for(var i = 1;i <= n; i++) {
            console.log(i)
        }
    
    
        }
    printInt(12);
    
    // 2. write the function printIntRev(n) taking one parameter n and print all natual numbers in the reverse in console (from n to 1).
    function printIntRev(n){
        for (var i = n; i >= 1; i--) {
              console.log(i)
        }   
    }
       printIntRev(12);
    
       // 3. write the function checkInput(x) taking on paremeter x and return the string "number" if x is a number; return the string 'string' if the x is a string; and return the boolean if the x is a boolean. otherwise returns-1 checkInput(5)===> ("number") ("hello") ===> 'string' ('5') ===> 'string' (true) ===> boolean [1,2,3,4]===> -1
       function checkInput(x) {
           //check if x is a number, string or boolean
         if(typeof(x) === "number") {
               return "number";
           } else if (typeof (x) === "string") {
               return "string";
           } else if (typeof (x) === "boolean") {
                   return boolean;
               } else {
                   Return -1;
               }
            }
        
        //switch
     //   switch(typeof x) {
      //      case "number":
       //         return "number";
      //      case "string":
       //         return "string";
      //      case "boolean":
      //          return "boolean";    
      //      default:
      //          return -1;
    
       // }
       //    if(
       //        typeof x === "number"|| typeof x=== //"string" || typeof x === "boolean")  {
      //         return typeof x;
      //     }  else {
     //          return -1;
      //     }        
     //  }
       console.log(checkInput(5));
    
    // 4. write the function simpleEventadding(num) taking a number and add up all the even numbers from 1 to num. Example: simpleEvetAdding(5) ===> 6 (because 2+4 = 6) simpleEventAdding(10) ===> 30 (becasue 2+4+6+8+10 = 30) simpleEventAdding(11) ===> 30 (because 2+4+6+8+10 = 30) simpleEventAdding(1) ===> 0 simpleEventAdding(0) ===> 0
    function simpleEventAdding(num) {
       var result = 0;
        // loop from 1 to num
       for (var i =1;i <=num; i++){
           //if i is even
           if(i % 2 === 0) {
    //            result = result + i;
                result +=i;
            }  
        }
        return result;
    }
    //    return result;
    //var result = 0;
    //for(var i =0; i <= num; i= i=2) {
      //  result +=i 
    //}
     //   return result;
     //  }
      console.log(simpleEventAdding(10));
    
        
    
    // 5. Write the function letterCapitalize(str) taking a string and capitalize the first letter of each word. The given words will be separated by only one space.                letterCapitalize(“hello world”) ===========> “Hello Word” letterCapitalize(“you cannot find the answer online”) =====>  “You Cannot Find The Answer Online”
    
    function letterCapitalize(str) {
        // split the input str based on space
       var splittedArray = str.split(" ");
       var result = "";
             for (var i = 0; i<splitedArray.length; i++) {
             result += spitredArray[i][0].toUpperCase() + splittedArray[i].slice(1);
         }
          //  splittedArray.forEach(function(element) {
           // result += " " + elememnt[0].toUpperCase() + element.slice(1);
            return result.slice(1);
        })
    }
       console.log(letterCapitalize("hello this is MSIMBO"))
    
    // 6. Write the function simpleReverse(str) taking a string and return the string in reversed order.
     //simpleReverse('hello') ===> 'olleh
     //simpleReverse('I Love Code') ===> 'edoC evoL !'
    //Hint: Think of how you can loop through a string or array of characters backwards to produce a new string
    
   function simpleReverse(str) {
        var splitedArray = str.split("");
        var result = "";
        for(var i=splitedArray.length - 1; i>= 0; i--) {
       result += splitedArray[i];
      
     } 
        
       return result;
      
      }
        //    return str. split('').reverse().join("");
    
        //     return spliterArray.join("");
        // return result;
//    }
    
    console.log(simpleReverse("hello world"));
    
    // 7. Write the function findDiff(arr) taking an array of numbers as parameter and return the difference between the maximum number and the minimum number (max - min). 
    //findDiff([24,22,23,22,24]) ===> 19(becasue 20-1 = 19) 
    //findDiff([24,22,23,22,24]) ===> 2 (bevasuse 24- 22 = 2) 
    //findDiff([1,1,1,1]) ===> 0; 
    //findDiff([1]) ===> 0;
    //findDiff(][]) ===> 0;
    
    
    function findDiff(arr) {
     var max = arr[0];
       var min = arr[0];
     // loop through the input array
        for(var i =0; i< arr.lenght; i++){
        // find max
        if(max < arr[i]){
            max = arr[i];
        }

        return max - min;
    }
}
    
      
    
    //8. Write the function timeConvert(num) taking a number as parameter and return the number of hours and minutes the parameter converts to. Separate the number of hours and minutes with a colon.
    //timeConvert(61)  ===> 1:1
    //timcConvert(63)  ===> 1:3
    //timeConvert(120) ===> 2:0
    //timeConvert(59)  ===> 0:59
    //Hint: Dividing and modulo the number 60.
    
    function timeCovert(num) {
        //get hour
        var hour = parseInt(num/ 60)
        //get min
        var min = num % 60;
        //combine them
        return hour + ":" + min; 

    }
        console.log(timeConvert(120));

        // 9. Write the function findStr(str, long) taking two strings as parameters and return how many str you can find in long. Assume Str is not empty string.
        // Example:
        //findStr(“hi”, “dasdhidasdahidashi”) =======> 3
        //findStr(“o”, “daodo”) =======> 2
        //findStr(“ha”,”abcde”)=======> 0
        //findStr(“h”, “hihelloho”)======> 3


    function findstr(str, long) {
     //   make a counter
        var counter =0;
        //loop through the long string
        for(var i=0; i <= long.lenght - str.length; i++) {
            if(long.slice(i, i+ str.length) === str) 
            counter ++;
        }   
            return counter;
        } 
       
    
        console.log(findStr("0","daodo"));

     
        //10. Write the function selfDividingNumbers(left, right) taking two number bound as parameters and returns an array of every possible self dividing number between them, including the bounds. Hint: A self-dividing number is a number that is divisible by every digit it contains. For example, 128 is a self-dividing number because 128 % 1 ==0, 128 % 2 == 0 and 128 % 8 == 0.
    //selfDividingNumbers(1, 22) ========> [1,2,3,4,5,6,7,8,9,11,12,15,22]
    //selfDividingNumbers(1, 10) =======> [1,2,3,4,5,6,7,8,9]
    //selfDividingNumbers(12, 21) =======> [12, 15]
   
    function SelfDividingnumbers(left,right) { 
        //array to hold answer
        var result = []; 
    //loop from left to right
         for(var i = left; i <= right; i++) {
     //check if the number is selfdividing  
            if(selfdividing(i)) {
                result.push(i)
         
            }
     
        }
        return result;
    }
        console.log(selfDividingnumbers(1,12));
    
    //to check it the number is selfdividing
        function sefDividingNumbers(num) {
        //split number into array of digits
        var Myarray =  num.toString().split("");
        //use num to % digits ==0 to ccheck if the number is selfdiving
        for(var i = 0;i<myArray.lenght;i++) {
            if(num % parseInt(myArray[1]) !== 0)
            return false; 
        }
                //loop from left to right 
                //(inside loop) check if the number is selfdividing
    } 
return true;
console.log(selfDividing(12));
    //check if a number is selfdividing
    // loop digits in the number

    //11. 11. Write the function moveZeros(nums) taking an array of numbers and move all 0’s to the end of it while maintaining the relative order of the non-zero elements.  For example:
    //moveZeros([0,1,0,3,12]) ======> [1,3,12,0,0]
    //moveZeros([1,2,0,0,2,312,33,0,0]) ======> [1,2,2,312,33,0,0,0,0]
    //moveZeros([0,0,0]) ======> [0,0,0]
    //moveZeros([1,2,312,11,2]) =======> [1,2,312,11,2]

    function moveZeros(num)
   //make a new array
    var result =[];
    //make a counter
    var counter = 0;
    for(var i = 0; i< nums.lenght; i++) {
        //compare nums[i] with 0
        if(nums[i] === 0) {
                counter ++;
        } else{
            result.push(nums[i]);
        }
        //adding zeros
        while(counter > 0) {
            counter--;
        }
        return result;
    }
console.log(moveZeros([0,1,0,3,12])); 

    //12. Create an average() function that calculates the average of an array of numbers.
    //Examples:
    //average([2, 6]) =====> 4
    //average([2, 3, 3, 5, 7, 10]) ======> 5
    //average([7, 1432, 12, 13, 100]) ======> 312.8
    //average([]) ======> 0
   
    function average(arr) {
        if(arr.lenght === 0) 
        //find the sum of the numbers in arr
        
        var sum=0;
        for(var i=0; i<arr.length();i++) {
            sum =+ arr[i];

        }
         // do a division
        return sum / arr.length()

    }
    console.log(average([2,4,6]));
    //console.log(average([]));
    










































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































    
    Var result= [];
    function sefDividingNumbers(num) {
        //split number into array of digits
        var Myarray =  num.toString(.split("");
                //loop from left to right 
                //(inside loop) check if the number is selfdividing
    } 

    //check if a number is selfdividing
    // loop digits in the number

    //11. 
    function moveZeros(num)
   //make a new array
    var result =[];

    //12. Create an average() function that calculates the average of an array of numbers.
    //Examples:
    //average([2, 6]) =====> 4
    //average([2, 3, 3, 5, 7, 10]) ======> 5
    //average([7, 1432, 12, 13, 100]) ======> 312.8
    //average([]) ======> 0
   
    function average(arr){
        var arr = [3,7,8,10,12];
        var sum=0
        for(var i=0; i<arr.length;i++){
            sum + arr[i]
        };
    }
    console.log(sum/arr.lenght);

